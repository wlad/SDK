{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/Iso8601_type.json",
  "title": "Iso8601_type",
  "description": "Abstract ancestor type of ISO 8601 types, defining interface for 'extended' and 'partial' concepts from ISO 8601.",
  "$comments": "Defined in Foundation_types IM, abstract, inherits from Temporal, Time_Definitions",
  "type": "object",
  "properties": {
    "_type": {
      "enum": [
        "Iso8601_date_time",
        "Iso8601_duration",
        "Iso8601_time",
        "Iso8601_timezone",
        "Iso8601_date",
        "DV_DATE_TIME",
        "DV_DURATION",
        "DV_TIME",
        "DV_DATE"
      ]
    },
    "value": {
      "description": "Representation of all descendants is a single String.",
      "$ref": "all.json#/definitions/String"
    }
  },
  "required": [
    "_type",
    "value"
  ],
  "$abstract": true,
  "$inherits": [
    "all.json#/definitions/Temporal",
    "all.json#/definitions/Time_Definitions"
  ],
  "$children": [
    "all.json#/definitions/Iso8601_date_time",
    "all.json#/definitions/Iso8601_duration",
    "all.json#/definitions/Iso8601_time",
    "all.json#/definitions/Iso8601_timezone",
    "all.json#/definitions/Iso8601_date"
  ],
  "$functions": {
    "valid_year": {
      "parameters": {
        "y": {
          "$ref": "all.json#/definitions/Integer"
        }
      },
      "required_parameters": [
        "y"
      ],
      "return": {
        "$ref": "all.json#/definitions/Boolean"
      }
    },
    "valid_month": {
      "parameters": {
        "m": {
          "$ref": "all.json#/definitions/Integer"
        }
      },
      "required_parameters": [
        "m"
      ],
      "return": {
        "$ref": "all.json#/definitions/Boolean"
      }
    },
    "valid_day": {
      "description": "True if d >= 1 and d <= days_in_month (m, y)",
      "parameters": {
        "y": {
          "$ref": "all.json#/definitions/Integer"
        },
        "m": {
          "$ref": "all.json#/definitions/Integer"
        },
        "d": {
          "$ref": "all.json#/definitions/Integer"
        }
      },
      "required_parameters": [
        "y",
        "m",
        "d"
      ],
      "return": {
        "$ref": "all.json#/definitions/Boolean"
      }
    },
    "valid_hour": {
      "description": "True if (h >= 0 and h < Hours_in_day) or (h = Hours_in_day and m = 0 and s = 0)",
      "parameters": {
        "h": {
          "$ref": "all.json#/definitions/Integer"
        },
        "m": {
          "$ref": "all.json#/definitions/Integer"
        },
        "s": {
          "$ref": "all.json#/definitions/Integer"
        }
      },
      "required_parameters": [
        "h",
        "m",
        "s"
      ],
      "return": {
        "$ref": "all.json#/definitions/Boolean"
      }
    },
    "valid_minute": {
      "description": "True if m >= 0 and m < Minutes_in_hour.",
      "parameters": {
        "m": {
          "$ref": "all.json#/definitions/Integer"
        }
      },
      "required_parameters": [
        "m"
      ],
      "return": {
        "$ref": "all.json#/definitions/Boolean"
      }
    },
    "valid_second": {
      "description": "True if s >= 0 and s < Seconds_in_minute .",
      "parameters": {
        "s": {
          "$ref": "all.json#/definitions/Integer"
        }
      },
      "required_parameters": [
        "s"
      ],
      "return": {
        "$ref": "all.json#/definitions/Boolean"
      }
    },
    "valid_fractional_second": {
      "description": "True if fs >= 0.0 and fs < 1.0 .",
      "parameters": {
        "fs": {
          "$ref": "all.json#/definitions/Double"
        }
      },
      "required_parameters": [
        "fs"
      ],
      "return": {
        "$ref": "all.json#/definitions/Boolean"
      }
    },
    "valid_iso8601_date": {
      "description": "String is a valid ISO 8601 date, i.e. takes the complete form:\n\n* `YYYY-MM-DD` (extended, preferred) or one of the partial forms `YYYY-MM` or `YYYY`\n* `YYYYMMDD` (compact) or a partial variant `YYYYMM`.\n\nWhere:\n\n* `YYYY` is the string form of any positive number in the range `0000` - `9999` (zero-filled to four digits)\n* `MM` is `01` - `12` (zero-filled to two digits)\n* `DD` is `01` - `31` (zero-filled to two digits)\n\nThe combinations of `YYYY`, `MM`, `DD` numbers must be correct with respect to the Gregorian calendar.",
      "parameters": {
        "s": {
          "$ref": "all.json#/definitions/String"
        }
      },
      "required_parameters": [
        "s"
      ],
      "return": {
        "$ref": "all.json#/definitions/Boolean"
      }
    },
    "valid_iso8601_time": {
      "description": "String is a valid ISO 8601 date, i.e. takes the form:\n\n* `hh:mm:ss[(,|.)s+][Z|\u00b1hh[:mm]]` (extended)\n* `hhmmss[(,|.)s+][Z|\u00b1hh[mm]]` (compact)\n* or one of the partial forms:\n** `hh:mm` (extended)\n** `hhmm` or `hh` (compact)\n\nwith an additional optional timezone indicator of:\n\n* `Z` or`\u00b1hh[:mm]` (extended)  `\u00b1hh[mm]` (compact)\n\nWhere:\n\n* `hh` is \"00\" - \"23\" (0-filled to two digits)\n* `mm` is \"00\" - \"59\" (0-filled to two digits)\n* `ss` is \"00\" - \"60\" (0-filled to two digits)\n* `[(,|.)s+]` is an optional string consisting of a comma or decimal point followed by numeric string of 1 or more digits, representing a fractional second\n* `Z` is a literal meaning UTC (modern replacement for GMT), i.e. timezone `+0000`\n",
      "parameters": {
        "s": {
          "$ref": "all.json#/definitions/String"
        }
      },
      "required_parameters": [
        "s"
      ],
      "return": {
        "$ref": "all.json#/definitions/Boolean"
      }
    },
    "valid_iso8601_date_time": {
      "description": "String is a valid ISO 8601 date-time, i.e. takes the form:\n\n* `YYYY-MM-DDThh:mm:ss[(,|.)s+][Z|\u00b1hh[:mm]]` (extended)\n* `YYYYMMDDThhmmss[(,|.)s+][Z|\u00b1hh[mm]]` (compact)\n* or one of the partial forms:\n** `YYYY-MM-DDThh:mm` or `YYYY-MM-DDThh` (extended)\n** `YYYYMMDDThhmm` or `YYYYMMDDThh` (compact)",
      "parameters": {
        "s": {
          "$ref": "all.json#/definitions/String"
        }
      },
      "required_parameters": [
        "s"
      ],
      "return": {
        "$ref": "all.json#/definitions/Boolean"
      }
    },
    "valid_iso8601_duration": {
      "description": "String is a valid ISO 8601 duration, i.e. takes the form:\n\n* `P[nnY][nnM][nnW][nnD][T[nnH][nnM][nnS]]`\n\nWhere each nn represents a number of years, months, etc. nnW represents a number of 7-day weeks.\n\nNote: allowing the `W` designator in the same expression as other designators is an exception to the published standard, but necessary in clinical information (typically for representing pregnancy duration).",
      "parameters": {
        "s": {
          "description": "String is a valid ISO 8601 duration, i.e. takes the form:\n\n* `P[nnY][nnM][nnW][nnD][T[nnH][nnM][nnS]]`\n\nWhere each `nn` represents a number of years, months, etc. `nnW` represents a number of 7- day weeks.\n\nNOTE: allowing the `W` designator in the same expression as other designators is an exception to the published standard, but necessary in clinical information (typically for representing pregnancy duration).",
          "$ref": "all.json#/definitions/String"
        }
      },
      "required_parameters": [
        "s"
      ],
      "return": {
        "$ref": "all.json#/definitions/Boolean"
      }
    },
    "infix <": {
      "description": "Arithmetic comparison. In conjunction with \u2018=\u2019, enables the definition of the operators \u2018>\u2019, \u2018>=\u2019, \u2018<=\u2019, \u2018<>\u2019. In real type systems, this operator might be defined on another class for comparability.",
      "parameters": {
        "other": {
          "$ref": "all.json#/definitions/Ordered"
        }
      },
      "required_parameters": [
        "other"
      ],
      "return": {
        "$ref": "all.json#/definitions/Boolean"
      }
    },
    "is_partial": {
      "description": "True if this date time is partial, i.e. if trailing end (right hand) value(s) is/are missing.",
      "return": {
        "$ref": "all.json#/definitions/Boolean"
      }
    },
    "is_extended": {
      "description": "True if this ISO8601 string is in the 'extended' form, i.e. uses \u2018-\u2019 and / or \u2018:\u2019 separators. This is the preferred format.",
      "return": {
        "$ref": "all.json#/definitions/Boolean"
      }
    }
  },
  "$invariants": {
    "Post": "Result = fs >= 0.0 and fs < 1.0 ."
  }
}