{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Common/all.json",
  "title": "Common IM definitions",
  "description": "The common Reference Model comprises a number of packages containing abstract concepts and design patterns used in higher level openEHR models. Several concepts recur in higher level packages. The classes LOCATABLE and ARCHETYPED provide the link between information and archetype models. The classes ATTESTATION and PARTICIPATION are generic domain concepts that appear in various reference models. The change_control package defines a formal model of change management and versioning which applies to any service that needs to be able to supply previous states of its information, in particular the demographic and EHR services.",
  "$comments": "Part of RM component, Release-1.0.4 version.",
  "definitions": {
    "PATHABLE": {
      "title": "PATHABLE",
      "description": "The PATHABLE class defines the pathing capabilities used by nearly all classes in the openEHR reference model, mostly via inheritance of LOCATABLE. The defining characteristics of PATHABLE objects are that they can locate child objects using paths, and they know their parent object in a compositional hierarchy. The parent feature is defined as abstract in the model, and may be implemented in any way convenient.",
      "$comments": "Defined in Common IM, abstract",
      "properties": {
        "_type": {
          "enum": [
            "ISM_TRANSITION",
            "INSTRUCTION_DETAILS",
            "EVENT_CONTEXT",
            "FOLDER",
            "EHR_ACCESS",
            "EHR_STATUS",
            "EXTRACT",
            "EXTRACT_ACTION_REQUEST",
            "EXTRACT_CHAPTER",
            "EXTRACT_REQUEST",
            "CONTACT",
            "ADDRESS",
            "PARTY_IDENTITY",
            "CAPABILITY",
            "PARTY_RELATIONSHIP",
            "ACTIVITY",
            "COMPOSITION",
            "HISTORY",
            "ITEM_TREE",
            "ITEM_SINGLE",
            "ITEM_TABLE",
            "ITEM_LIST",
            "HISTORY<ITEM_STRUCTURE>",
            "CLUSTER",
            "ELEMENT",
            "POINT_EVENT",
            "INTERVAL_EVENT",
            "EXTRACT_ENTITY_CHAPTER",
            "EXTRACT_FOLDER",
            "OPENEHR_CONTENT_ITEM",
            "GENERIC_CONTENT_ITEM",
            "ROLE",
            "AGENT",
            "ORGANISATION",
            "GROUP",
            "PERSON",
            "GENERIC_ENTRY",
            "SECTION",
            "WORK_PLAN",
            "TASK_PLAN",
            "ADMIN_ENTRY",
            "OBSERVATION",
            "EVALUATION",
            "ACTION",
            "INSTRUCTION",
            "TASK_GROUP",
            "DISPATCHABLE_TASK",
            "PERFORMABLE_TASK",
            "DECISION_GROUP",
            "CONDITION_GROUP",
            "EVENT_GROUP",
            "ADHOC_GROUP",
            "DECISION_BRANCH",
            "CONDITION_BRANCH",
            "EVENT_BRANCH",
            "ADHOC_BRANCH",
            "HAND_OFF",
            "EXTERNAL_REQUEST",
            "SYSTEM_REQUEST",
            "SUB_PLAN",
            "DEFINED_ACTION",
            "MANUAL_NOTIFICATION",
            "TIMER_EVENT",
            "CALLBACK_NOTIFICATION",
            "STATE_TRIGGER",
            "TASK_TRANSITION",
            "TIMELINE_MOMENT",
            "CALENDAR_EVENT",
            "DELAY_EVENT",
            "SYSTEM_NOTIFICATION"
          ]
        }
      },
      "required": [
        "_type"
      ],
      "$abstract": true,
      "$children": [
        "#/definitions/LOCATABLE",
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Composition/all.json#/definitions/ISM_TRANSITION",
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Composition/all.json#/definitions/INSTRUCTION_DETAILS",
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Composition/all.json#/definitions/EVENT_CONTEXT"
      ],
      "$functions": {
        "parent": {
          "description": "Parent of this node in a compositional hierarchy. \n",
          "return": {
            "$ref": "#/definitions/PATHABLE"
          }
        },
        "item_at_path": {
          "description": "The item at a path (relative to this item); only valid for unique paths, i.e. paths that resolve to a single item. ",
          "parameters": {
            "a_path": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
            }
          },
          "required_parameters": [
            "a_path"
          ],
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Any"
          }
        },
        "items_at_path": {
          "description": "List of items corresponding to a non-unique path.",
          "parameters": {
            "a_path": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
            }
          },
          "required_parameters": [
            "a_path"
          ],
          "return": {
            "type": "array",
            "items": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Any"
            }
          }
        },
        "path_exists": {
          "description": "True if the path exists in the data with respect to the current item. ",
          "parameters": {
            "a_path": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
            }
          },
          "required_parameters": [
            "a_path"
          ],
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
          }
        },
        "path_unique": {
          "description": "True if the path corresponds to a single item in the data. ",
          "parameters": {
            "a_path": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
            }
          },
          "required_parameters": [
            "a_path"
          ],
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
          }
        },
        "path_of_item": {
          "description": "The path to an item relative to the root of this archetyped structure.",
          "parameters": {
            "a_loc": {
              "$ref": "#/definitions/PATHABLE"
            }
          },
          "required_parameters": [
            "a_loc"
          ],
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
          }
        }
      },
      "$invariants": {
        "Pre": "path_exists (a_path)"
      }
    },
    "LINK": {
      "title": "LINK",
      "description": "The `LINK` type defines a logical relationship between two items, such as two `ENTRYs` or an `ENTRY` and a `COMPOSITION`. Links can be used across compositions, and across EHRs. Links can potentially be used between interior (i.e. non archetype root) nodes, although this probably should be prevented in archetypes. Multiple `LINKs` can be attached to the root object of any archetyped structure to give the effect of a 1->N link.\n\n1:1 and 1:N relationships between archetyped content elements (e.g. `ENTRYs`) can be expressed by using one, or more than one, respectively, `LINKs`. Chains of links can be used to see  problem threads  or other logical groupings of items. \n\nLinks should be between archetyped structures only, i.e. between objects representing complete domain concepts because relationships between sub-elements of whole concepts are not necessarily meaningful, and may be downright confusing. Sensible links only exist between whole `ENTRYs`, `SECTIONs`, `COMPOSITIONs` and so on. ",
      "$comments": "Defined in Common IM",
      "type": "object",
      "properties": {
        "meaning": {
          "description": "Used to describe the relationship, usually in clinical terms, such as  in response to  (the relationship between test results and an order),  follow-up to  and so on. Such relationships can represent any clinically meaningful connection between pieces of information. Values for meaning include those described in Annex C, ENV 13606 pt 2 under the categories of  generic ,  documenting and reporting ,  organisational ,  clinical ,  circumstancial , and  view management .",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_TEXT"
        },
        "type": {
          "description": "The type attribute is used to indicate a clinical or domain-level meaning for the kind of link, for example  problem  or  issue . If type values are designed appropriately, they can be used by the requestor of EHR extracts to categorise links which must be followed and which can be broken when the extract is created. \n",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_TEXT"
        },
        "target": {
          "description": "The logical  to  object in the link relation, as per the linguistic sense of the meaning attribute.",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_EHR_URI"
        }
      },
      "required": [
        "meaning",
        "type",
        "target"
      ]
    },
    "LOCATABLE": {
      "title": "LOCATABLE",
      "description": "Root class of all information model classes that can be archetyped. Most classes in the openEHR reference model inherit from the `LOCATABLE` class, which defines the idea of  locatability in an archetyped structure. `LOCATABLE` defines a runtime name and an `_archetype_node_id_`. ",
      "$comments": "Defined in Common IM, abstract, inherits from PATHABLE",
      "type": "object",
      "properties": {
        "_type": {
          "enum": [
            "FOLDER",
            "EHR_ACCESS",
            "EHR_STATUS",
            "EXTRACT",
            "EXTRACT_ACTION_REQUEST",
            "EXTRACT_CHAPTER",
            "EXTRACT_REQUEST",
            "CONTACT",
            "ADDRESS",
            "PARTY_IDENTITY",
            "CAPABILITY",
            "PARTY_RELATIONSHIP",
            "ACTIVITY",
            "COMPOSITION",
            "HISTORY",
            "ITEM_TREE",
            "ITEM_SINGLE",
            "ITEM_TABLE",
            "ITEM_LIST",
            "HISTORY<ITEM_STRUCTURE>",
            "CLUSTER",
            "ELEMENT",
            "POINT_EVENT",
            "INTERVAL_EVENT",
            "EXTRACT_ENTITY_CHAPTER",
            "EXTRACT_FOLDER",
            "OPENEHR_CONTENT_ITEM",
            "GENERIC_CONTENT_ITEM",
            "ROLE",
            "AGENT",
            "ORGANISATION",
            "GROUP",
            "PERSON",
            "GENERIC_ENTRY",
            "SECTION",
            "WORK_PLAN",
            "TASK_PLAN",
            "ADMIN_ENTRY",
            "OBSERVATION",
            "EVALUATION",
            "ACTION",
            "INSTRUCTION",
            "TASK_GROUP",
            "DISPATCHABLE_TASK",
            "PERFORMABLE_TASK",
            "DECISION_GROUP",
            "CONDITION_GROUP",
            "EVENT_GROUP",
            "ADHOC_GROUP",
            "DECISION_BRANCH",
            "CONDITION_BRANCH",
            "EVENT_BRANCH",
            "ADHOC_BRANCH",
            "HAND_OFF",
            "EXTERNAL_REQUEST",
            "SYSTEM_REQUEST",
            "SUB_PLAN",
            "DEFINED_ACTION",
            "MANUAL_NOTIFICATION",
            "TIMER_EVENT",
            "CALLBACK_NOTIFICATION",
            "STATE_TRIGGER",
            "TASK_TRANSITION",
            "TIMELINE_MOMENT",
            "CALENDAR_EVENT",
            "DELAY_EVENT",
            "SYSTEM_NOTIFICATION"
          ]
        },
        "name": {
          "description": "Runtime name of this fragment, used to build runtime paths. This is the term provided via a clinical application or batch process to name this EHR construct: its retention in the EHR faithfully preserves the original label by which this entry was known to end users. \n",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_TEXT"
        },
        "archetype_node_id": {
          "description": "Design-time archetype id of this node taken from its generating archetype; used to build archetype paths. Always in the form of an  at  code, e.g.  at0005 . This value enables a \"standardised\" name for this node to be generated, by referring to the generating archetype local ontology. \n\nAt an archetype root point, the value of this attribute is always the stringified form of the archetype_id found in the archetype_details object. \n",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
        },
        "uid": {
          "description": "Optional globally unique object identifier for root points of archetyped structures. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/UID_BASED_ID"
        },
        "links": {
          "description": "Links to other archetyped structures (data whose root object inherits from ARCHETYPED, such as ENTRY, SECTION and so on). Links may be to structures in other compositions. ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LINK"
          }
        },
        "archetype_details": {
          "description": "Details of archetyping used on this node.",
          "$ref": "#/definitions/ARCHETYPED"
        },
        "feeder_audit": {
          "description": "Audit trail from non-openEHR system of original commit of information forming the content of this node, or from a conversion gateway which has synthesised this node. ",
          "$ref": "#/definitions/FEEDER_AUDIT"
        }
      },
      "required": [
        "_type",
        "name",
        "archetype_node_id"
      ],
      "$abstract": true,
      "$inherits": [
        "#/definitions/PATHABLE"
      ],
      "$children": [
        "#/definitions/FOLDER",
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_structures/all.json#/definitions/DATA_STRUCTURE",
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_structures/all.json#/definitions/ITEM",
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_structures/all.json#/definitions/EVENT",
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Ehr/all.json#/definitions/EHR_ACCESS",
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Ehr/all.json#/definitions/EHR_STATUS",
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Ehr_extract/all.json#/definitions/EXTRACT",
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Ehr_extract/all.json#/definitions/EXTRACT_ACTION_REQUEST",
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Ehr_extract/all.json#/definitions/EXTRACT_CHAPTER",
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Ehr_extract/all.json#/definitions/EXTRACT_ITEM",
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Ehr_extract/all.json#/definitions/EXTRACT_REQUEST",
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Demographic/all.json#/definitions/PARTY",
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Demographic/all.json#/definitions/CONTACT",
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Demographic/all.json#/definitions/ADDRESS",
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Demographic/all.json#/definitions/PARTY_IDENTITY",
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Demographic/all.json#/definitions/CAPABILITY",
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Demographic/all.json#/definitions/PARTY_RELATIONSHIP",
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Composition/all.json#/definitions/CONTENT_ITEM",
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Composition/all.json#/definitions/ACTIVITY",
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Composition/all.json#/definitions/COMPOSITION",
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/PROC/latest/Definition/all.json#/definitions/PLAN_ITEM",
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/PROC/latest/Definition/all.json#/definitions/TASK_ACTION",
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/PROC/latest/Definition/all.json#/definitions/PLAN_EVENT"
      ],
      "$functions": {
        "parent": {
          "description": "Parent of this node in a compositional hierarchy. \n",
          "return": {
            "$ref": "#/definitions/PATHABLE"
          }
        },
        "item_at_path": {
          "description": "The item at a path (relative to this item); only valid for unique paths, i.e. paths that resolve to a single item. ",
          "parameters": {
            "a_path": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
            }
          },
          "required_parameters": [
            "a_path"
          ],
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Any"
          }
        },
        "items_at_path": {
          "description": "List of items corresponding to a non-unique path.",
          "parameters": {
            "a_path": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
            }
          },
          "required_parameters": [
            "a_path"
          ],
          "return": {
            "type": "array",
            "items": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Any"
            }
          }
        },
        "path_exists": {
          "description": "True if the path exists in the data with respect to the current item. ",
          "parameters": {
            "a_path": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
            }
          },
          "required_parameters": [
            "a_path"
          ],
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
          }
        },
        "path_unique": {
          "description": "True if the path corresponds to a single item in the data. ",
          "parameters": {
            "a_path": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
            }
          },
          "required_parameters": [
            "a_path"
          ],
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
          }
        },
        "path_of_item": {
          "description": "The path to an item relative to the root of this archetyped structure.",
          "parameters": {
            "a_loc": {
              "$ref": "#/definitions/PATHABLE"
            }
          },
          "required_parameters": [
            "a_loc"
          ],
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
          }
        },
        "concept": {
          "description": "Clinical concept of the archetype as a whole (= derived from the archetype_node_id' of the root node) ",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_TEXT"
          }
        },
        "is_archetype_root": {
          "description": "True if this node is the root of an archetyped structure.",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
          }
        }
      },
      "$invariants": {
        "Pre": "path_exists (a_path)",
        "Links_valid": "links /= Void implies not links.is_empty",
        "Archetyped_valid": "is_archetype_root xor archetype_details = Void",
        "Archetype_node_id_valid": "not archetype_node_id.is_empty"
      }
    },
    "ARCHETYPED": {
      "title": "ARCHETYPED",
      "description": "Archetypes act as the configuration basis for the particular structures of instances defined by the reference model. To enable archetypes to be used to create valid data, key classes in the reference model act as  root  points for archetyping; accordingly, these classes have the archetype_details attribute set. \n\nAn instance of the class ARCHETYPED contains the relevant archetype identification information, allowing generating archetypes to be matched up with data instances.",
      "$comments": "Defined in Common IM",
      "type": "object",
      "properties": {
        "archetype_id": {
          "description": "Globally unique archetype identifier. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/ARCHETYPE_ID"
        },
        "template_id": {
          "description": "Globally unique template identifier, if a template was active at this point in the structure. Normally, a template would only be used at the top of a top-level structure, but the possibility exists for templates at lower levels. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/TEMPLATE_ID"
        },
        "rm_version": {
          "description": "Version of the openEHR reference model used to create this object. Expressed in terms of the release version string, e.g.  1.0 ,  1.2.4 .",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
        }
      },
      "required": [
        "archetype_id",
        "rm_version"
      ],
      "$invariants": {
        "rm_version_valid": "not rm_version.is_empty",
        "Rm_version_valid": "not rm_version.is_empty"
      }
    },
    "FEEDER_AUDIT": {
      "title": "FEEDER_AUDIT",
      "description": "The `FEEDER_AUDIT` class defines the semantics of an audit trail which is constructed to describe the origin of data that have been transformed into openEHR form and committed to the system. ",
      "$comments": "Defined in Common IM",
      "type": "object",
      "properties": {
        "originating_system_item_ids": {
          "description": "Identifiers used for the item in the originating system, e.g. filler and placer ids. ",
          "type": "array",
          "items": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_IDENTIFIER"
          }
        },
        "feeder_system_item_ids": {
          "description": "Identifiers used for the item in the feeder system, where the feeder system is distinct from the originating system. ",
          "type": "array",
          "items": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_IDENTIFIER"
          }
        },
        "original_content": {
          "description": "Optional inline inclusion of or reference to original content corresponding to the openEHR content at this node. Typically a URI reference to a document or message in a persistent store associated with the EHR. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_ENCAPSULATED"
        },
        "originating_system_audit": {
          "description": "Any audit information for the information item from the originating system. ",
          "$ref": "#/definitions/FEEDER_AUDIT_DETAILS"
        },
        "feeder_system_audit": {
          "description": "Any audit information for the information item from the feeder system, if different from the originating system.",
          "$ref": "#/definitions/FEEDER_AUDIT_DETAILS"
        }
      },
      "required": [
        "originating_system_audit"
      ]
    },
    "FEEDER_AUDIT_DETAILS": {
      "title": "FEEDER_AUDIT_DETAILS",
      "description": "Audit details for any system in a feeder system chain. Audit details here means the general notion of who/where/when the information item to which the audit is attached was created. None of the attributes is defined as mandatory, however, in different scenarios, various combinations of attributes will usually be mandatory. This can be controlled by specifying feeder audit details in legacy archetypes. ",
      "$comments": "Defined in Common IM",
      "type": "object",
      "properties": {
        "system_id": {
          "description": "Identifier of the system which handled the information item. This is the IT system owned by the organisation legally responsible for handling the data, and at which the data were previously created or passed by an earlier system.\n",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
        },
        "location": {
          "description": "Identifier of the particular site/facility within an organisation which handled the item. For computability, this identifier needs to be e.g. a PKI identifier which can be included in the identifier list of the `PARTY_IDENTIFIED` object. ",
          "$ref": "#/definitions/PARTY_IDENTIFIED"
        },
        "subject": {
          "description": "Identifiers for subject of the received information item. ",
          "$ref": "#/definitions/PARTY_PROXY"
        },
        "provider": {
          "description": "Optional provider(s) who created, committed, forwarded or otherwise handled the item. ",
          "$ref": "#/definitions/PARTY_IDENTIFIED"
        },
        "time": {
          "description": "Time of handling the item. For an originating system, this will be time of creation, for an intermediate feeder system, this will be a time of accession or other time of handling, where available.",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_DATE_TIME"
        },
        "version_id": {
          "description": "Any identifier used in the system such as  \"interim\" ,  \"final\" , or numeric versions if available. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
        }
      },
      "required": [
        "system_id"
      ],
      "$invariants": {
        "System_id_valid": "not system_id.is_empty"
      }
    },
    "VERSIONED_OBJECT": {
      "title": "VERSIONED_OBJECT",
      "description": "Version control abstraction, defining semantics for versioning one complex object.",
      "$comments": "Defined in Common IM",
      "type": "object",
      "properties": {
        "_type": {
          "enum": [
            "VERSIONED_OBJECT",
            "VERSIONED_FOLDER",
            "VERSIONED_EHR_ACCESS",
            "VERSIONED_EHR_STATUS",
            "VERSIONED_COMPOSITION",
            "VERSIONED_PARTY"
          ]
        },
        "uid": {
          "description": "Unique identifier of this version container in the form of a UID with no extension. This id will be the same in all instances of the same container in a distributed environment, meaning that it can be understood as the uid of the  virtual version tree. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/HIER_OBJECT_ID"
        },
        "owner_id": {
          "description": "Reference to object to which this version container belongs, e.g. the id of the containing EHR or other relevant owning entity. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_REF"
        },
        "time_created": {
          "description": "Time of initial creation of this versioned object. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_DATE_TIME"
        }
      },
      "required": [
        "uid",
        "owner_id",
        "time_created"
      ],
      "$children": [
        "#/definitions/VERSIONED_FOLDER",
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Ehr/all.json#/definitions/VERSIONED_EHR_ACCESS",
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Ehr/all.json#/definitions/VERSIONED_EHR_STATUS",
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Ehr/all.json#/definitions/VERSIONED_COMPOSITION",
        "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Demographic/all.json#/definitions/VERSIONED_PARTY"
      ],
      "$functions": {
        "version_count": {
          "description": "Return the total number of versions in this object.",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Integer"
          }
        },
        "all_version_ids": {
          "description": "Return a list of ids of all versions in this object. ",
          "return": {
            "type": "array",
            "items": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
            },
            "minItems": 1
          }
        },
        "all_versions": {
          "description": "Return a list of all versions in this object. ",
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/VERSION"
            },
            "minItems": 1
          }
        },
        "has_version_at_time": {
          "description": "True if a version for time  `_a_time_` exists. ",
          "parameters": {
            "a_ver_id": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
            }
          },
          "required_parameters": [
            "a_ver_id"
          ],
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
          }
        },
        "has_version_id": {
          "description": "True if a version with `_an_id_` exists. ",
          "parameters": {
            "a_ver_id": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
            }
          },
          "required_parameters": [
            "a_ver_id"
          ],
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
          }
        },
        "version_with_id": {
          "description": "Return the version with `_uid_` =  `_a_ver_id_`. \n",
          "parameters": {
            "a_ver_id": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
            }
          },
          "required_parameters": [
            "a_ver_id"
          ],
          "return": {
            "$ref": "#/definitions/VERSION"
          }
        },
        "is_original_version": {
          "description": "True if version with `_an_id_` is an `ORIGINAL_VERSION`. ",
          "parameters": {
            "a_ver_id": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
            }
          },
          "required_parameters": [
            "a_ver_id"
          ],
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
          }
        },
        "version_at_time": {
          "description": "Return the version for time  `_a_time_`. ",
          "parameters": {
            "a_time": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_DATE_TIME"
            }
          },
          "required_parameters": [
            "a_time"
          ],
          "return": {
            "$ref": "#/definitions/VERSION"
          }
        },
        "revision_history": {
          "description": "History of all audits and attestations in this versioned repository.",
          "return": {
            "$ref": "#/definitions/REVISION_HISTORY"
          }
        },
        "latest_version": {
          "description": "Return the most recently added version (i.e. on trunk or any branch). ",
          "return": {
            "$ref": "#/definitions/VERSION"
          }
        },
        "latest_trunk_version": {
          "description": "Return the most recently added trunk version. ",
          "return": {
            "$ref": "#/definitions/VERSION"
          }
        },
        "trunk_lifecycle_state": {
          "description": "Return the lifecycle state from the latest trunk version. Useful for determining if the version container is logically deleted. ",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_CODED_TEXT"
          }
        },
        "commit_original_version": {
          "description": "Add a new original version. ",
          "parameters": {
            "a_contribution": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_REF"
            },
            "a_new_version_uid": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
            },
            "a_preceding_version_id": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
            },
            "an_audit": {
              "$ref": "#/definitions/AUDIT_DETAILS"
            },
            "a_lifecycle_state": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_CODED_TEXT"
            },
            "a_data": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/T"
            },
            "signing_key": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
            }
          },
          "required_parameters": [
            "a_contribution",
            "a_new_version_uid",
            "a_preceding_version_id",
            "an_audit",
            "a_lifecycle_state",
            "a_data",
            "signing_key"
          ]
        },
        "commit_original_merged_version": {
          "description": "Add a new original merged version. This commit function adds a parameter containing the ids of other versions merged into the current one. ",
          "parameters": {
            "a_contribution": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_REF"
            },
            "a_new_version_uid": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
            },
            "a_preceding_version_id": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
            },
            "an_audit": {
              "$ref": "#/definitions/AUDIT_DETAILS"
            },
            "a_lifecycle_state": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_CODED_TEXT"
            },
            "a_data": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/T"
            },
            "an_other_input_uids": {
              "type": "array",
              "items": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
              },
              "minItems": 1
            },
            "signing_key": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
            }
          },
          "required_parameters": [
            "a_contribution",
            "a_new_version_uid",
            "a_preceding_version_id",
            "an_audit",
            "a_lifecycle_state",
            "a_data",
            "an_other_input_uids",
            "signing_key"
          ]
        },
        "commit_imported_version": {
          "description": "Add a new imported version. Details of version id etc come from the `ORIGINAL_VERSION` being committed. ",
          "parameters": {
            "a_contribution": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_REF"
            },
            "an_audit": {
              "$ref": "#/definitions/AUDIT_DETAILS"
            },
            "a_version": {
              "$ref": "#/definitions/ORIGINAL_VERSION"
            }
          },
          "required_parameters": [
            "a_contribution",
            "an_audit",
            "a_version"
          ]
        },
        "commit_attestation": {
          "description": "Add a new attestation to a specified original version. Attestations can only be added to Original versions. ",
          "parameters": {
            "an_attestation": {
              "$ref": "#/definitions/ATTESTATION"
            },
            "a_ver_id": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
            },
            "signing_key": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
            }
          },
          "required_parameters": [
            "an_attestation",
            "a_ver_id",
            "signing_key"
          ]
        }
      },
      "$invariants": {
        "Version_count_valid": "version_count >= 0",
        "All_version_ids_valid": "all_version_ids.count = version_count",
        "All_versions_valid": "all_versions.count = version_count",
        "Latest_version_valid": "version_count > 0 implies latest_version /= Void",
        "Uid_validity": "extension.is_empty",
        "Pre": "has_version_id(a_ver_id)\nand is_original_version(a_ver_id)",
        "Post": "Result = latest_trunk_version.lifecycle_state"
      }
    },
    "CONTRIBUTION": {
      "title": "CONTRIBUTION",
      "description": "Documents a Contribution (change set) of one or more versions added to a change-controlled repository. ",
      "$comments": "Defined in Common IM",
      "type": "object",
      "properties": {
        "uid": {
          "description": "Unique identifier for this Contribution. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/HIER_OBJECT_ID"
        },
        "versions": {
          "description": "Set of references to Versions causing changes to this EHR. Each contribution contains a list of versions, which may include paths pointing to any number of versionable items, i.e. items of types such as `COMPOSITION` and `FOLDER`. ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VERSION"
          },
          "minItems": 1
        },
        "audit": {
          "description": "Audit trail corresponding to the committal of this Contribution. ",
          "$ref": "#/definitions/AUDIT_DETAILS"
        }
      },
      "required": [
        "uid",
        "versions",
        "audit"
      ]
    },
    "VERSION": {
      "title": "VERSION",
      "description": "Abstract model of one Version within a Version container, containing data, commit audit trail, and the identifier of its Contribution.",
      "$comments": "Defined in Common IM, abstract",
      "type": "object",
      "properties": {
        "_type": {
          "enum": [
            "IMPORTED_VERSION",
            "ORIGINAL_VERSION"
          ]
        },
        "contribution": {
          "description": "Contribution in which this version was added. ",
          "$ref": "#/definitions/CONTRIBUTION"
        },
        "signature": {
          "description": "OpenPGP digital signature or digest of content committed in this Version. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
        },
        "commit_audit": {
          "description": "Audit trail corresponding to the committal of this version to the `VERSIONED_OBJECT`.",
          "$ref": "#/definitions/AUDIT_DETAILS"
        }
      },
      "required": [
        "_type",
        "contribution",
        "commit_audit"
      ],
      "$abstract": true,
      "$children": [
        "#/definitions/IMPORTED_VERSION",
        "#/definitions/ORIGINAL_VERSION"
      ],
      "$functions": {
        "uid": {
          "description": "Unique identifier of this `VERSION`, in the form of an `{object_id, a version_tree_id, creating_system_id}` triple, where the `_object_id_` has the same value as the containing `VERSIONED_OBJECT _uid_`.",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
          }
        },
        "preceding_version_uid": {
          "description": "Unique identifier of the version of which this version is a modification; Void if this is the first version.",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
          }
        },
        "data": {
          "description": "The data of this Version.",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/T"
          }
        },
        "lifecycle_state": {
          "description": "Lifecycle state of this version; coded by openEHR vocabulary 'version lifecycle state'. ",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_CODED_TEXT"
          }
        },
        "canonical_form": {
          "description": "A canonical serial form of this Version, suitable for generating reliable hashes and signatures.",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
          }
        },
        "owner_id": {
          "description": "Copy of the owning `VERSIONED_OBJECT._uid_` value; extracted from the local `_uid_` property's `_object_id_`.",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/HIER_OBJECT_ID"
          }
        },
        "is_branch": {
          "description": "True if this Version represents a branch. Derived from `_uid_` attribute. ",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
          }
        }
      },
      "$invariants": {
        "Owner_id_valid": "owner_id.value.is_equal (uid.object_id.value)",
        "Preceding_version_uid_validity": "uid.version_tree_id.is_first xor preceding_version_uid /= Void",
        "Lifecycle_state_ valid": "lifecycle_state /= Void and then terminology (Term_id_openehr).has_code_for_group_id (Group_id_version_lifecycle_state, lifecycle_state.defining_code)",
        "Post": "Result.value.is_equal (uid.object_id.value)"
      }
    },
    "IMPORTED_VERSION": {
      "title": "IMPORTED_VERSION",
      "description": "Versions whose content is an ORIGINAL_VERSION copied from another location; this class inherits commit_audit and contribution from VERSION<T>, providing imported versions with their own audit trail and Contribution, distinct from those of the imported ORIGINAL_VERSION. ",
      "$comments": "Defined in Common IM, inherits from VERSION",
      "type": "object",
      "properties": {
        "contribution": {
          "description": "Contribution in which this version was added. ",
          "$ref": "#/definitions/CONTRIBUTION"
        },
        "signature": {
          "description": "OpenPGP digital signature or digest of content committed in this Version. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
        },
        "commit_audit": {
          "description": "Audit trail corresponding to the committal of this version to the `VERSIONED_OBJECT`.",
          "$ref": "#/definitions/AUDIT_DETAILS"
        },
        "item": {
          "description": "The ORIGINAL_VERSION object that was imported. ",
          "$ref": "#/definitions/ORIGINAL_VERSION"
        }
      },
      "required": [
        "contribution",
        "commit_audit",
        "item"
      ],
      "$inherits": [
        "#/definitions/VERSION"
      ],
      "$functions": {
        "uid": {
          "description": "Computed version of inheritance precursor, derived as `_item.uid_`. ",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
          }
        },
        "preceding_version_uid": {
          "description": "Computed version of inheritance precursor, derived as `_item.preceding_version_uid_`. ",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
          }
        },
        "data": {
          "description": "Original content of this Version. \n",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/T"
          }
        },
        "lifecycle_state": {
          "description": "Lifecycle state of the content item in wrapped `ORIGINAL_VERSION`, derived as `_item.lifecycle_state_`; coded by openEHR vocabulary 'version lifecycle state'. ",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_CODED_TEXT"
          }
        },
        "canonical_form": {
          "description": "A canonical serial form of this Version, suitable for generating reliable hashes and signatures.",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
          }
        },
        "owner_id": {
          "description": "Copy of the owning `VERSIONED_OBJECT._uid_` value; extracted from the local `_uid_` property's `_object_id_`.",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/HIER_OBJECT_ID"
          }
        },
        "is_branch": {
          "description": "True if this Version represents a branch. Derived from `_uid_` attribute. ",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
          }
        }
      },
      "$invariants": {
        "Owner_id_valid": "owner_id.value.is_equal (uid.object_id.value)",
        "Preceding_version_uid_validity": "uid.version_tree_id.is_first xor preceding_version_uid /= Void",
        "Lifecycle_state_ valid": "lifecycle_state /= Void and then terminology (Term_id_openehr).has_code_for_group_id (Group_id_version_lifecycle_state, lifecycle_state.defining_code)",
        "Post": "Result = item.preceding_version_uid"
      }
    },
    "ORIGINAL_VERSION": {
      "title": "ORIGINAL_VERSION",
      "description": "A Version containing locally created content and optional attestations. ",
      "$comments": "Defined in Common IM, inherits from VERSION",
      "type": "object",
      "properties": {
        "contribution": {
          "description": "Contribution in which this version was added. ",
          "$ref": "#/definitions/CONTRIBUTION"
        },
        "signature": {
          "description": "OpenPGP digital signature or digest of content committed in this Version. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
        },
        "commit_audit": {
          "description": "Audit trail corresponding to the committal of this version to the `VERSIONED_OBJECT`.",
          "$ref": "#/definitions/AUDIT_DETAILS"
        },
        "uid": {
          "description": "Stored version of inheritance precursor. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
        },
        "preceding_version_uid": {
          "description": "Stored version of inheritance precursor. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
        },
        "other_input_version_uids": {
          "description": "Identifiers of other versions whose content was merged into this version, if any. ",
          "type": "array",
          "items": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
          }
        },
        "lifecycle_state": {
          "description": "Lifecycle state of the content item in this version; coded by openEHR vocabulary 'version lifecycle state'. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_CODED_TEXT"
        },
        "attestations": {
          "description": "Set of attestations relating to this version. ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ATTESTATION"
          }
        },
        "data": {
          "description": "Data content of this Version.",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/T"
        }
      },
      "required": [
        "contribution",
        "commit_audit",
        "uid",
        "lifecycle_state"
      ],
      "$inherits": [
        "#/definitions/VERSION"
      ],
      "$functions": {
        "uid": {
          "description": "Unique identifier of this `VERSION`, in the form of an `{object_id, a version_tree_id, creating_system_id}` triple, where the `_object_id_` has the same value as the containing `VERSIONED_OBJECT _uid_`.",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
          }
        },
        "preceding_version_uid": {
          "description": "Unique identifier of the version of which this version is a modification; Void if this is the first version.",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
          }
        },
        "data": {
          "description": "The data of this Version.",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/T"
          }
        },
        "lifecycle_state": {
          "description": "Lifecycle state of this version; coded by openEHR vocabulary 'version lifecycle state'. ",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_CODED_TEXT"
          }
        },
        "canonical_form": {
          "description": "A canonical serial form of this Version, suitable for generating reliable hashes and signatures.",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
          }
        },
        "owner_id": {
          "description": "Copy of the owning `VERSIONED_OBJECT._uid_` value; extracted from the local `_uid_` property's `_object_id_`.",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/HIER_OBJECT_ID"
          }
        },
        "is_branch": {
          "description": "True if this Version represents a branch. Derived from `_uid_` attribute. ",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
          }
        },
        "is_merged": {
          "description": "True if this Version was created from more than just the preceding (checked out) version.",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
          }
        }
      },
      "$invariants": {
        "Owner_id_valid": "owner_id.value.is_equal (uid.object_id.value)",
        "Preceding_version_uid_validity": "uid.version_tree_id.is_first xor preceding_version_uid /= Void",
        "Lifecycle_state_ valid": "lifecycle_state /= Void and then terminology (Term_id_openehr).has_code_for_group_id (Group_id_version_lifecycle_state, lifecycle_state.defining_code)",
        "Post": "Result.value.is_equal (uid.object_id.value)",
        "Attestations_valid": "attestations /= Void implies not attestations.is_empty",
        "Is_merged_validity": "other_input_version_ids = Void xor is_merged",
        "Other_input_version_uids_valid": "other_input_version_uids /= Void implies not other_input_version_uids.is_empty"
      }
    },
    "REVISION_HISTORY_ITEM": {
      "title": "REVISION_HISTORY_ITEM",
      "description": "An entry in a revision history, corresponding to a version from a versioned container. Consists of AUDIT_DETAILS instances with revision identifier of the revision to which the AUDIT_DETAILS intance belongs. ",
      "$comments": "Defined in Common IM",
      "type": "object",
      "properties": {
        "version_id": {
          "description": "Version identifier for this revision. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
        },
        "audits": {
          "description": "The audits for this revision; there will always be at least one commit audit (which may itself be an ATTESTATION), there may also be further attestations. ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AUDIT_DETAILS"
          },
          "minItems": 1
        }
      },
      "required": [
        "version_id",
        "audits"
      ],
      "$invariants": {
        "Audit_valid": "not audits.is_empty"
      }
    },
    "AUDIT_DETAILS": {
      "title": "AUDIT_DETAILS",
      "description": "The set of attributes required to document the committal of an information item to a repository. ",
      "$comments": "Defined in Common IM",
      "type": "object",
      "properties": {
        "_type": {
          "enum": [
            "AUDIT_DETAILS",
            "ATTESTATION"
          ]
        },
        "system_id": {
          "description": "Identifier of the logical EHR system where the change was committed. This is almost always owned by the organisation legally responsible for the EHR, and is distinct from any application, or any hosting infrastructure.",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
        },
        "time_committed": {
          "description": "Time of committal of the item. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_DATE_TIME"
        },
        "change_type": {
          "description": "Type of change. Coded using the openEHR Terminology  audit change type  group.",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_CODED_TEXT"
        },
        "description": {
          "description": "Reason for committal. This may be used to qualify the value in the `_change_type_` field. For example, if the change affects only the EHR directory, this field might be used to indicate 'Folder \"episode 2018-02-16\" added' or similar.",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_TEXT"
        },
        "committer": {
          "description": "Identity and optional reference into identity management service, of user who committed the item. ",
          "$ref": "#/definitions/PARTY_PROXY"
        }
      },
      "required": [
        "system_id",
        "time_committed",
        "change_type",
        "committer"
      ],
      "$children": [
        "#/definitions/ATTESTATION"
      ],
      "$invariants": {
        "System_id_valid": "not system_id.is_empty",
        "Change_type_valid": "terminology (Terminology_id_openehr).has_code_for_group_id (Group_id_audit_change_type, change_type.defining_code)"
      }
    },
    "ATTESTATION": {
      "title": "ATTESTATION",
      "description": "Record an attestation of a party (the committer) to item(s) of record content. An attestation is an explicit signing by one healthcare agent of particular content for various particular purposes, including:\n\n* for authorisation of a controlled substance or procedure (e.g. sectioning of patient under mental health act); \n* witnessing of content by senior clinical professional; \n* indicating acknowledgement of content by intended recipient, e.g. GP who ordered a test result. \n",
      "$comments": "Defined in Common IM, inherits from AUDIT_DETAILS",
      "type": "object",
      "properties": {
        "system_id": {
          "description": "Identifier of the logical EHR system where the change was committed. This is almost always owned by the organisation legally responsible for the EHR, and is distinct from any application, or any hosting infrastructure.",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
        },
        "time_committed": {
          "description": "Time of committal of the item. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_DATE_TIME"
        },
        "change_type": {
          "description": "Type of change. Coded using the openEHR Terminology  audit change type  group.",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_CODED_TEXT"
        },
        "description": {
          "description": "Reason for committal. This may be used to qualify the value in the `_change_type_` field. For example, if the change affects only the EHR directory, this field might be used to indicate 'Folder \"episode 2018-02-16\" added' or similar.",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_TEXT"
        },
        "committer": {
          "description": "Identity and optional reference into identity management service, of user who committed the item. ",
          "$ref": "#/definitions/PARTY_PROXY"
        },
        "attested_view": {
          "description": "Optional visual representation of content attested e.g. screen image. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_MULTIMEDIA"
        },
        "proof": {
          "description": "Proof of attestation. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
        },
        "items": {
          "description": "Items attested, expressed as fully qualified runtime paths to the items in question. Although not recommended, these may include fine-grained items which have been attested in some other system. Otherwise it is assumed to be for the entire VERSION with which it is associated. ",
          "type": "array",
          "items": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_EHR_URI"
          }
        },
        "reason": {
          "description": "Reason of this attestation. Optionally coded by the openEHR Terminology group  attestation reason ; includes values like  authorisation ,  witness  etc. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_TEXT"
        },
        "is_pending": {
          "description": "True if this attestation is outstanding; False means it has been completed.",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
        }
      },
      "required": [
        "system_id",
        "time_committed",
        "change_type",
        "committer",
        "reason",
        "is_pending"
      ],
      "$inherits": [
        "#/definitions/AUDIT_DETAILS"
      ],
      "$invariants": {
        "System_id_valid": "not system_id.is_empty",
        "Change_type_valid": "terminology (Terminology_id_openehr).has_code_for_group_id (Group_id_audit_change_type, change_type.defining_code)",
        "Items_valid": "items /= Void implies not items.is_empty",
        "Reason_valid": "(reason.generating_type.is_equal (\u201cDV_CODED_TEXT\u201d) implies terminology (Terminology_id_openehr).has_code_for_group_id (Group_id_attestation_reason, reason.defining_code))"
      }
    },
    "PARTICIPATION": {
      "title": "PARTICIPATION",
      "description": "Model of a participation of a Party (any Actor or Role) in an activity.  Used to represent any participation of a Party in some activity, which is not  explicitly in the model, e.g. assisting nurse. Can be used to record past or  future participations. \n\nShould not be used in place of more permanent relationships between demographic entities. ",
      "$comments": "Defined in Common IM",
      "type": "object",
      "properties": {
        "function": {
          "description": "The function of the Party in this participation (note that a given party might participate in more than one way in a particular activity). This attribute should be coded, but cannot be limited to the HL7v3:ParticipationFunction vocabulary, since it is too limited and hospital-oriented. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_TEXT"
        },
        "mode": {
          "description": "Optional field for recording the 'mode' of the performer / activity interaction, e.g. present, by telephone, by email etc. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_CODED_TEXT"
        },
        "performer": {
          "description": "The id and possibly demographic system link of the party participating in the activity. ",
          "$ref": "#/definitions/PARTY_PROXY"
        },
        "time": {
          "description": "The time interval during which the participation took place, if it is used in an observational context (i.e. recording facts about the past); or the intended time interval of the participation when used in future contexts, such as EHR Instructions. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_INTERVAL_of_DV_DATE_TIME"
        }
      },
      "required": [
        "function",
        "performer"
      ],
      "$invariants": {
        "Function_valid": "function.generating_type.is_equal (\"DV_CODED_TEXT\") implies\nterminology (Terminology_id_openehr).has_code_for_group_id (Group_id_participation_function, function.defining_code)",
        "Mode_valid": "mode /= Void implies terminology (Terminology_id_openehr).has_code_for_group_id (Group_id_participation_mode, mode.defining_code)"
      }
    },
    "PARTY_PROXY": {
      "title": "PARTY_PROXY",
      "description": "Abstract concept of a proxy description of a party, including an optional link to data for this party in a demographic or other identity management system. Sub- typed into `PARTY_IDENTIFIED` and `PARTY_SELF`. ",
      "$comments": "Defined in Common IM, abstract",
      "type": "object",
      "properties": {
        "_type": {
          "enum": [
            "PARTY_IDENTIFIED",
            "PARTY_SELF",
            "PARTY_RELATED"
          ]
        },
        "external_ref": {
          "description": "Optional reference to more detailed demographic or identification information for this party, in an external system. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/PARTY_REF"
        }
      },
      "required": [
        "_type"
      ],
      "$abstract": true,
      "$children": [
        "#/definitions/PARTY_IDENTIFIED",
        "#/definitions/PARTY_SELF"
      ]
    },
    "PARTY_IDENTIFIED": {
      "title": "PARTY_IDENTIFIED",
      "description": "Proxy data for an identified party other than the subject of the record, minimally consisting of human-readable identifier(s), such as name, formal (and possibly computable) identifiers such as NHS number, and an optional link to external data. There must be at least one of name, identifier or external_ref present.\n\nUsed to describe parties where only identifiers may be known, and there is no entry at all in the demographic system (or even no demographic system). Typically for health care providers, e.g. name and provider number of an institution. \n\nShould not be used to include patient identifying information. ",
      "$comments": "Defined in Common IM, inherits from PARTY_PROXY",
      "type": "object",
      "properties": {
        "_type": {
          "enum": [
            "PARTY_IDENTIFIED",
            "PARTY_RELATED"
          ]
        },
        "external_ref": {
          "description": "Optional reference to more detailed demographic or identification information for this party, in an external system. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/PARTY_REF"
        },
        "name": {
          "description": "Optional human-readable name (in String form).",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
        },
        "identifiers": {
          "description": "One or more formal identifiers (possibly computable). \n",
          "type": "array",
          "items": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_IDENTIFIER"
          }
        }
      },
      "$inherits": [
        "#/definitions/PARTY_PROXY"
      ],
      "$children": [
        "#/definitions/PARTY_RELATED"
      ],
      "$invariants": {
        "Basic_validity": "name /= Void or identifiers /= Void or external_ref /= Void",
        "Name_valid": "name /= Void implies not name.is_empty",
        "Identifiers_valid": "identifiers /= Void implies not identifiers.is_empty"
      }
    },
    "PARTY_SELF": {
      "title": "PARTY_SELF",
      "description": "Party proxy representing the subject of the record. Used to indicate that the party is the owner of the record. May or may not have `_external_ref_` set. ",
      "$comments": "Defined in Common IM, inherits from PARTY_PROXY",
      "type": "object",
      "properties": {
        "external_ref": {
          "description": "Optional reference to more detailed demographic or identification information for this party, in an external system. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/PARTY_REF"
        }
      },
      "$inherits": [
        "#/definitions/PARTY_PROXY"
      ]
    },
    "PARTY_RELATED": {
      "title": "PARTY_RELATED",
      "description": "Proxy type for identifying a party and its relationship to the subject of the record. Use where the relationship between the party and the subject of the record must be known. ",
      "$comments": "Defined in Common IM, inherits from PARTY_IDENTIFIED",
      "type": "object",
      "properties": {
        "external_ref": {
          "description": "Optional reference to more detailed demographic or identification information for this party, in an external system. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/PARTY_REF"
        },
        "name": {
          "description": "Optional human-readable name (in String form).",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
        },
        "identifiers": {
          "description": "One or more formal identifiers (possibly computable). \n",
          "type": "array",
          "items": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_IDENTIFIER"
          }
        },
        "relationship": {
          "description": "Relationship of subject of this ENTRY to the subject of the record. May be coded. If it is the patient, coded as  self. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_CODED_TEXT"
        }
      },
      "required": [
        "relationship"
      ],
      "$inherits": [
        "#/definitions/PARTY_IDENTIFIED"
      ],
      "$invariants": {
        "Basic_validity": "name /= Void or identifiers /= Void or external_ref /= Void",
        "Name_valid": "name /= Void implies not name.is_empty",
        "Identifiers_valid": "identifiers /= Void implies not identifiers.is_empty",
        "Relationship_valid": "terminology (Terminology_id_openehr).has_code_for_group_id (Group_id_subject_relationship, relationship.defining_code)"
      }
    },
    "REVISION_HISTORY": {
      "title": "REVISION_HISTORY",
      "description": "Purpose Defines the notion of a revision history of audit items, each associated with the version for which that audit was committed. The list is in most-recent-first order. ",
      "$comments": "Defined in Common IM",
      "type": "object",
      "properties": {
        "items": {
          "description": "The items in this history in most-recent-last order. ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/REVISION_HISTORY_ITEM"
          },
          "minItems": 1
        }
      },
      "required": [
        "items"
      ],
      "$functions": {
        "most_recent_version": {
          "description": "The version id of the most recent item, as a String.",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
          }
        },
        "most_recent_version_time_committed": {
          "description": "The commit date/time of the most recent item, as a String. ",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
          }
        }
      },
      "$invariants": {
        "Post": "Result.is_equal (items.last.audits.first. time_committed.value)"
      }
    },
    "VERSIONED_FOLDER": {
      "title": "VERSIONED_FOLDER",
      "description": "A version-controlled hierarchy of `FOLDERs` giving the effect of a directory. ",
      "$comments": "Defined in Common IM, inherits from VERSIONED_OBJECT",
      "type": "object",
      "properties": {
        "uid": {
          "description": "Unique identifier of this version container in the form of a UID with no extension. This id will be the same in all instances of the same container in a distributed environment, meaning that it can be understood as the uid of the  virtual version tree. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/HIER_OBJECT_ID"
        },
        "owner_id": {
          "description": "Reference to object to which this version container belongs, e.g. the id of the containing EHR or other relevant owning entity. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_REF"
        },
        "time_created": {
          "description": "Time of initial creation of this versioned object. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_DATE_TIME"
        }
      },
      "required": [
        "uid",
        "owner_id",
        "time_created"
      ],
      "$inherits": [
        "#/definitions/VERSIONED_OBJECT"
      ],
      "$functions": {
        "version_count": {
          "description": "Return the total number of versions in this object.",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Integer"
          }
        },
        "all_version_ids": {
          "description": "Return a list of ids of all versions in this object. ",
          "return": {
            "type": "array",
            "items": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
            },
            "minItems": 1
          }
        },
        "all_versions": {
          "description": "Return a list of all versions in this object. ",
          "return": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/VERSION"
            },
            "minItems": 1
          }
        },
        "has_version_at_time": {
          "description": "True if a version for time  `_a_time_` exists. ",
          "parameters": {
            "a_ver_id": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
            }
          },
          "required_parameters": [
            "a_ver_id"
          ],
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
          }
        },
        "has_version_id": {
          "description": "True if a version with `_an_id_` exists. ",
          "parameters": {
            "a_ver_id": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
            }
          },
          "required_parameters": [
            "a_ver_id"
          ],
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
          }
        },
        "version_with_id": {
          "description": "Return the version with `_uid_` =  `_a_ver_id_`. \n",
          "parameters": {
            "a_ver_id": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
            }
          },
          "required_parameters": [
            "a_ver_id"
          ],
          "return": {
            "$ref": "#/definitions/VERSION"
          }
        },
        "is_original_version": {
          "description": "True if version with `_an_id_` is an `ORIGINAL_VERSION`. ",
          "parameters": {
            "a_ver_id": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
            }
          },
          "required_parameters": [
            "a_ver_id"
          ],
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
          }
        },
        "version_at_time": {
          "description": "Return the version for time  `_a_time_`. ",
          "parameters": {
            "a_time": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_DATE_TIME"
            }
          },
          "required_parameters": [
            "a_time"
          ],
          "return": {
            "$ref": "#/definitions/VERSION"
          }
        },
        "revision_history": {
          "description": "History of all audits and attestations in this versioned repository.",
          "return": {
            "$ref": "#/definitions/REVISION_HISTORY"
          }
        },
        "latest_version": {
          "description": "Return the most recently added version (i.e. on trunk or any branch). ",
          "return": {
            "$ref": "#/definitions/VERSION"
          }
        },
        "latest_trunk_version": {
          "description": "Return the most recently added trunk version. ",
          "return": {
            "$ref": "#/definitions/VERSION"
          }
        },
        "trunk_lifecycle_state": {
          "description": "Return the lifecycle state from the latest trunk version. Useful for determining if the version container is logically deleted. ",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_CODED_TEXT"
          }
        },
        "commit_original_version": {
          "description": "Add a new original version. ",
          "parameters": {
            "a_contribution": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_REF"
            },
            "a_new_version_uid": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
            },
            "a_preceding_version_id": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
            },
            "an_audit": {
              "$ref": "#/definitions/AUDIT_DETAILS"
            },
            "a_lifecycle_state": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_CODED_TEXT"
            },
            "a_data": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/T"
            },
            "signing_key": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
            }
          },
          "required_parameters": [
            "a_contribution",
            "a_new_version_uid",
            "a_preceding_version_id",
            "an_audit",
            "a_lifecycle_state",
            "a_data",
            "signing_key"
          ]
        },
        "commit_original_merged_version": {
          "description": "Add a new original merged version. This commit function adds a parameter containing the ids of other versions merged into the current one. ",
          "parameters": {
            "a_contribution": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_REF"
            },
            "a_new_version_uid": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
            },
            "a_preceding_version_id": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
            },
            "an_audit": {
              "$ref": "#/definitions/AUDIT_DETAILS"
            },
            "a_lifecycle_state": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_CODED_TEXT"
            },
            "a_data": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/T"
            },
            "an_other_input_uids": {
              "type": "array",
              "items": {
                "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
              },
              "minItems": 1
            },
            "signing_key": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
            }
          },
          "required_parameters": [
            "a_contribution",
            "a_new_version_uid",
            "a_preceding_version_id",
            "an_audit",
            "a_lifecycle_state",
            "a_data",
            "an_other_input_uids",
            "signing_key"
          ]
        },
        "commit_imported_version": {
          "description": "Add a new imported version. Details of version id etc come from the `ORIGINAL_VERSION` being committed. ",
          "parameters": {
            "a_contribution": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_REF"
            },
            "an_audit": {
              "$ref": "#/definitions/AUDIT_DETAILS"
            },
            "a_version": {
              "$ref": "#/definitions/ORIGINAL_VERSION"
            }
          },
          "required_parameters": [
            "a_contribution",
            "an_audit",
            "a_version"
          ]
        },
        "commit_attestation": {
          "description": "Add a new attestation to a specified original version. Attestations can only be added to Original versions. ",
          "parameters": {
            "an_attestation": {
              "$ref": "#/definitions/ATTESTATION"
            },
            "a_ver_id": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
            },
            "signing_key": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
            }
          },
          "required_parameters": [
            "an_attestation",
            "a_ver_id",
            "signing_key"
          ]
        }
      },
      "$invariants": {
        "Version_count_valid": "version_count >= 0",
        "All_version_ids_valid": "all_version_ids.count = version_count",
        "All_versions_valid": "all_versions.count = version_count",
        "Latest_version_valid": "version_count > 0 implies latest_version /= Void",
        "Uid_validity": "extension.is_empty",
        "Pre": "has_version_id(a_ver_id)\nand is_original_version(a_ver_id)",
        "Post": "Result = latest_trunk_version.lifecycle_state"
      }
    },
    "FOLDER": {
      "title": "FOLDER",
      "description": "The concept of a named folder.",
      "$comments": "Defined in Common IM, inherits from LOCATABLE",
      "type": "object",
      "properties": {
        "name": {
          "description": "Runtime name of this fragment, used to build runtime paths. This is the term provided via a clinical application or batch process to name this EHR construct: its retention in the EHR faithfully preserves the original label by which this entry was known to end users. \n",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_TEXT"
        },
        "archetype_node_id": {
          "description": "Design-time archetype id of this node taken from its generating archetype; used to build archetype paths. Always in the form of an  at  code, e.g.  at0005 . This value enables a \"standardised\" name for this node to be generated, by referring to the generating archetype local ontology. \n\nAt an archetype root point, the value of this attribute is always the stringified form of the archetype_id found in the archetype_details object. \n",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
        },
        "uid": {
          "description": "Optional globally unique object identifier for root points of archetyped structures. ",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/UID_BASED_ID"
        },
        "links": {
          "description": "Links to other archetyped structures (data whose root object inherits from ARCHETYPED, such as ENTRY, SECTION and so on). Links may be to structures in other compositions. ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LINK"
          }
        },
        "archetype_details": {
          "description": "Details of archetyping used on this node.",
          "$ref": "#/definitions/ARCHETYPED"
        },
        "feeder_audit": {
          "description": "Audit trail from non-openEHR system of original commit of information forming the content of this node, or from a conversion gateway which has synthesised this node. ",
          "$ref": "#/definitions/FEEDER_AUDIT"
        },
        "items": {
          "description": "The list of references to other (usually) versioned objects logically in this folder. ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VERSIONED_OBJECT"
          }
        },
        "folders": {
          "description": "Sub-folders of this FOLDER. ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FOLDER"
          }
        },
        "details": {
          "description": "Archetypable extra meta-data for `FOLDER`.",
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_structures/all.json#/definitions/ITEM_STRUCTURE"
        }
      },
      "required": [
        "name",
        "archetype_node_id"
      ],
      "$inherits": [
        "#/definitions/LOCATABLE"
      ],
      "$functions": {
        "parent": {
          "description": "Parent of this node in a compositional hierarchy. \n",
          "return": {
            "$ref": "#/definitions/PATHABLE"
          }
        },
        "item_at_path": {
          "description": "The item at a path (relative to this item); only valid for unique paths, i.e. paths that resolve to a single item. ",
          "parameters": {
            "a_path": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
            }
          },
          "required_parameters": [
            "a_path"
          ],
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Any"
          }
        },
        "items_at_path": {
          "description": "List of items corresponding to a non-unique path.",
          "parameters": {
            "a_path": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
            }
          },
          "required_parameters": [
            "a_path"
          ],
          "return": {
            "type": "array",
            "items": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Any"
            }
          }
        },
        "path_exists": {
          "description": "True if the path exists in the data with respect to the current item. ",
          "parameters": {
            "a_path": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
            }
          },
          "required_parameters": [
            "a_path"
          ],
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
          }
        },
        "path_unique": {
          "description": "True if the path corresponds to a single item in the data. ",
          "parameters": {
            "a_path": {
              "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
            }
          },
          "required_parameters": [
            "a_path"
          ],
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
          }
        },
        "path_of_item": {
          "description": "The path to an item relative to the root of this archetyped structure.",
          "parameters": {
            "a_loc": {
              "$ref": "#/definitions/PATHABLE"
            }
          },
          "required_parameters": [
            "a_loc"
          ],
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
          }
        },
        "concept": {
          "description": "Clinical concept of the archetype as a whole (= derived from the archetype_node_id' of the root node) ",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_TEXT"
          }
        },
        "is_archetype_root": {
          "description": "True if this node is the root of an archetyped structure.",
          "return": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
          }
        }
      },
      "$invariants": {
        "Pre": "path_exists (a_path)",
        "Links_valid": "links /= Void implies not links.is_empty",
        "Archetyped_valid": "is_archetype_root xor archetype_details = Void",
        "Archetype_node_id_valid": "not archetype_node_id.is_empty",
        "Folders_valid": "not folders.is_empty"
      }
    }
  },
  "$component": "RM",
  "$version": "Release-1.0.4"
}