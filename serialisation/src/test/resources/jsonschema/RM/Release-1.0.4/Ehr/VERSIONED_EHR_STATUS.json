{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Ehr/VERSIONED_EHR_STATUS.json",
  "title": "VERSIONED_EHR_STATUS",
  "description": "Version container for EHR_STATUS instance.",
  "$comments": "Defined in Ehr IM, inherits from VERSIONED_OBJECT",
  "type": "object",
  "properties": {
    "uid": {
      "description": "Unique identifier of this version container in the form of a UID with no extension. This id will be the same in all instances of the same container in a distributed environment, meaning that it can be understood as the uid of the  virtual version tree. ",
      "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/HIER_OBJECT_ID"
    },
    "owner_id": {
      "description": "Reference to object to which this version container belongs, e.g. the id of the containing EHR or other relevant owning entity. ",
      "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_REF"
    },
    "time_created": {
      "description": "Time of initial creation of this versioned object. ",
      "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_DATE_TIME"
    }
  },
  "required": [
    "uid",
    "owner_id",
    "time_created"
  ],
  "$inherits": [
    "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Common/all.json#/definitions/VERSIONED_OBJECT"
  ],
  "$functions": {
    "version_count": {
      "description": "Return the total number of versions in this object.",
      "return": {
        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Integer"
      }
    },
    "all_version_ids": {
      "description": "Return a list of ids of all versions in this object. ",
      "return": {
        "type": "array",
        "items": {
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
        },
        "minItems": 1
      }
    },
    "all_versions": {
      "description": "Return a list of all versions in this object. ",
      "return": {
        "type": "array",
        "items": {
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Common/all.json#/definitions/VERSION"
        },
        "minItems": 1
      }
    },
    "has_version_at_time": {
      "description": "True if a version for time  `_a_time_` exists. ",
      "parameters": {
        "a_ver_id": {
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
        }
      },
      "required_parameters": [
        "a_ver_id"
      ],
      "return": {
        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
      }
    },
    "has_version_id": {
      "description": "True if a version with `_an_id_` exists. ",
      "parameters": {
        "a_ver_id": {
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
        }
      },
      "required_parameters": [
        "a_ver_id"
      ],
      "return": {
        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
      }
    },
    "version_with_id": {
      "description": "Return the version with `_uid_` =  `_a_ver_id_`. \n",
      "parameters": {
        "a_ver_id": {
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
        }
      },
      "required_parameters": [
        "a_ver_id"
      ],
      "return": {
        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Common/all.json#/definitions/VERSION"
      }
    },
    "is_original_version": {
      "description": "True if version with `_an_id_` is an `ORIGINAL_VERSION`. ",
      "parameters": {
        "a_ver_id": {
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
        }
      },
      "required_parameters": [
        "a_ver_id"
      ],
      "return": {
        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
      }
    },
    "version_at_time": {
      "description": "Return the version for time  `_a_time_`. ",
      "parameters": {
        "a_time": {
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_DATE_TIME"
        }
      },
      "required_parameters": [
        "a_time"
      ],
      "return": {
        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Common/all.json#/definitions/VERSION"
      }
    },
    "revision_history": {
      "description": "History of all audits and attestations in this versioned repository.",
      "return": {
        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Common/all.json#/definitions/REVISION_HISTORY"
      }
    },
    "latest_version": {
      "description": "Return the most recently added version (i.e. on trunk or any branch). ",
      "return": {
        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Common/all.json#/definitions/VERSION"
      }
    },
    "latest_trunk_version": {
      "description": "Return the most recently added trunk version. ",
      "return": {
        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Common/all.json#/definitions/VERSION"
      }
    },
    "trunk_lifecycle_state": {
      "description": "Return the lifecycle state from the latest trunk version. Useful for determining if the version container is logically deleted. ",
      "return": {
        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_CODED_TEXT"
      }
    },
    "commit_original_version": {
      "description": "Add a new original version. ",
      "parameters": {
        "a_contribution": {
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_REF"
        },
        "a_new_version_uid": {
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
        },
        "a_preceding_version_id": {
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
        },
        "an_audit": {
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Common/all.json#/definitions/AUDIT_DETAILS"
        },
        "a_lifecycle_state": {
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_CODED_TEXT"
        },
        "a_data": {
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/T"
        },
        "signing_key": {
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
        }
      },
      "required_parameters": [
        "a_contribution",
        "a_new_version_uid",
        "a_preceding_version_id",
        "an_audit",
        "a_lifecycle_state",
        "a_data",
        "signing_key"
      ]
    },
    "commit_original_merged_version": {
      "description": "Add a new original merged version. This commit function adds a parameter containing the ids of other versions merged into the current one. ",
      "parameters": {
        "a_contribution": {
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_REF"
        },
        "a_new_version_uid": {
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
        },
        "a_preceding_version_id": {
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
        },
        "an_audit": {
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Common/all.json#/definitions/AUDIT_DETAILS"
        },
        "a_lifecycle_state": {
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/all.json#/definitions/DV_CODED_TEXT"
        },
        "a_data": {
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/T"
        },
        "an_other_input_uids": {
          "type": "array",
          "items": {
            "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
          },
          "minItems": 1
        },
        "signing_key": {
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
        }
      },
      "required_parameters": [
        "a_contribution",
        "a_new_version_uid",
        "a_preceding_version_id",
        "an_audit",
        "a_lifecycle_state",
        "a_data",
        "an_other_input_uids",
        "signing_key"
      ]
    },
    "commit_imported_version": {
      "description": "Add a new imported version. Details of version id etc come from the `ORIGINAL_VERSION` being committed. ",
      "parameters": {
        "a_contribution": {
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_REF"
        },
        "an_audit": {
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Common/all.json#/definitions/AUDIT_DETAILS"
        },
        "a_version": {
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Common/all.json#/definitions/ORIGINAL_VERSION"
        }
      },
      "required_parameters": [
        "a_contribution",
        "an_audit",
        "a_version"
      ]
    },
    "commit_attestation": {
      "description": "Add a new attestation to a specified original version. Attestations can only be added to Original versions. ",
      "parameters": {
        "an_attestation": {
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Common/all.json#/definitions/ATTESTATION"
        },
        "a_ver_id": {
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Base_types/all.json#/definitions/OBJECT_VERSION_ID"
        },
        "signing_key": {
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
        }
      },
      "required_parameters": [
        "an_attestation",
        "a_ver_id",
        "signing_key"
      ]
    }
  },
  "$invariants": {
    "Version_count_valid": "version_count >= 0",
    "All_version_ids_valid": "all_version_ids.count = version_count",
    "All_versions_valid": "all_versions.count = version_count",
    "Latest_version_valid": "version_count > 0 implies latest_version /= Void",
    "Uid_validity": "extension.is_empty",
    "Pre": "has_version_id(a_ver_id)\nand is_original_version(a_ver_id)",
    "Post": "Result = latest_trunk_version.lifecycle_state"
  }
}