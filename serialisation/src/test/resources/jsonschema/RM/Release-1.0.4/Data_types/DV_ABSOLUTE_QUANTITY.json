{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/RM/Release-1.0.4/Data_types/DV_ABSOLUTE_QUANTITY.json",
  "title": "DV_ABSOLUTE_QUANTITY",
  "description": "Abstract class defining the concept of quantified entities whose values are absolute with respect to an origin. Dates and Times are the main example.",
  "$comments": "Defined in Data_types IM, abstract, inherits from DV_QUANTIFIED",
  "type": "object",
  "properties": {
    "_type": {
      "enum": [
        "DV_DATE",
        "DV_TIME",
        "DV_DATE_TIME"
      ]
    },
    "normal_status": {
      "description": "Optional normal status indicator of value with respect to normal range for this value. Often included by lab, even if the normal range itself is not included. Coded by ordinals in series HHH, HH, H, (nothing), L, LL, LLL; see openEHR terminology group  `normal_status`. ",
      "$ref": "all.json#/definitions/CODE_PHRASE"
    },
    "normal_range": {
      "description": "Optional normal range. ",
      "$ref": "all.json#/definitions/DV_INTERVAL"
    },
    "other_reference_ranges": {
      "description": "Optional tagged other reference ranges for this value in its particular measurement context.",
      "type": "array",
      "items": {
        "$ref": "all.json#/definitions/REFERENCE_RANGE"
      }
    },
    "magnitude_status": {
      "description": "Optional status of magnitude with values: \n\n* `\"=\"`   :   magnitude is a point value \n* `\"<\"`   :   value is < magnitude \n* `\">\"`   :   value is > magnitude \n* `\"<=\"` : value is <= magnitude \n* `\">=\"` : value is >= magnitude \n* `\"~\"`   :   value is approximately magnitude \n\nIf not present, assumed meaning is  `\"=\"` . \n",
      "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/String"
    },
    "accuracy": {
      "$ref": "all.json#/definitions/DV_AMOUNT"
    }
  },
  "required": [
    "_type"
  ],
  "$abstract": true,
  "$inherits": [
    "all.json#/definitions/DV_QUANTIFIED"
  ],
  "$children": [
    "all.json#/definitions/DV_TEMPORAL"
  ],
  "$functions": {
    "infix <": {
      "parameters": {
        "other": {
          "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Ordered"
        }
      },
      "required_parameters": [
        "other"
      ],
      "return": {
        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
      }
    },
    "is_strictly_comparable_to": {
      "description": "Test if two instances are strictly comparable.",
      "parameters": {
        "other": {
          "$ref": "all.json#/definitions/DV_ORDERED"
        }
      },
      "required_parameters": [
        "other"
      ],
      "return": {
        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
      }
    },
    "is_simple": {
      "description": "True if this quantity has no reference ranges.",
      "return": {
        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
      }
    },
    "is_normal": {
      "description": "Value is in the normal range, determined by comparison of the value to the normal_range if present, or by the normal_status marker if present. \n",
      "return": {
        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
      }
    },
    "valid_magnitude_status": {
      "description": "Test whether a string value is one of the valid values for the magnitude_status attribute. ",
      "return": {
        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
      }
    },
    "magnitude": {
      "return": {
        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Ordered_Numeric"
      }
    },
    "accuracy_unknown": {
      "description": "True if accuracy is not known, e.g. due to not being recorded or discernable.",
      "return": {
        "$ref": "https://specifications.openehr.org/releases/ITS-JSON/latest/components/BASE/Release-1.1.0/Foundation_types/all.json#/definitions/Boolean"
      }
    },
    "diff": {
      "description": "Difference of two quantities.\n\nThe value of accuracy in the result is either:\n\n* the sum of the accuracies of the operands, if both present, or;\n* unknown, if either or both operand accuracies are unknown.",
      "parameters": {
        "other": {
          "$ref": "all.json#/definitions/DV_ABSOLUTE_QUANTITY"
        }
      },
      "required_parameters": [
        "other"
      ],
      "return": {
        "$ref": "all.json#/definitions/DV_AMOUNT"
      }
    },
    "add": {
      "description": "Addition of a differential amount to this quantity. \n\nThe value of accuracy in the result is either:\n\n* the sum of the accuracies of the operands, if both present, or;\n* unknown, if either or both operand accuracies are unknown.",
      "parameters": {
        "a_diff": {
          "$ref": "all.json#/definitions/DV_AMOUNT"
        }
      },
      "required_parameters": [
        "a_diff"
      ],
      "return": {
        "$ref": "all.json#/definitions/DV_ABSOLUTE_QUANTITY"
      }
    },
    "subtract": {
      "description": "Result of subtracting a differential amount from this quantity.\n\nThe value of accuracy in the result is either:\n\n* the sum of the accuracies of the operands, if both present, or;\n* unknown, if either or both operand accuracies are unknown.",
      "parameters": {
        "a_diif": {
          "$ref": "all.json#/definitions/DV_AMOUNT"
        }
      },
      "required_parameters": [
        "a_diif"
      ],
      "return": {
        "$ref": "all.json#/definitions/DV_ABSOLUTE_QUANTITY"
      }
    }
  },
  "$invariants": {
    "Other_reference_ranges_validity": "other_reference_ranges /= Void implies not other_reference_ranges.is_empty",
    "Is_simple_validity": "(normal_range = Void and other_reference_ranges = Void) implies is_simple",
    "Normal_status_validity": "normal_status /= Void implies code_set (Code_set_id_normal_statuses).has_code (normal_status)",
    "Normal_range_and_status_consistency": "(normal_range /= Void and normal_status /= Void) implies (normal_status.code_string.is_equal (\u201cN\u201d) xor not normal_range.has (self))",
    "Pre": "normal_range /= Void or normal_status /= Void",
    "Post_range": "normal_range /= Void implies Result = normal_range.has (self)",
    "Post_status": "normal_status /= Void implies normal_status.code_string.is_equal (\u201cN\u201d)",
    "Magnitude_status_valid": "magnitude_status /= Void implies valid_magnitude_status (magnitude_status)",
    "Post": "Result = s.is_equal (\u201c=\u201d) or s.is_equal (\u201c<\u201d) or s.is_equal (\u201c>\u201d) or s.is_equal (\u201c<=\u201d) or s.is_equal (\u201c>=\u201d) or s.is_equal (\u201c~\u201d)"
  }
}